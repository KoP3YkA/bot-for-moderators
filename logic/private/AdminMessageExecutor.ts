import {BaseExecutor} from "../../core/classes/base/executors/BaseExecutor";
import {PrivateMessageEvent} from "../../core/classes/impl/events/PrivateMessageEvent";
import {Some} from "../../core/types/Some";
import {Administrator} from "../../core/classes/impl/entity/Administrator";
import {RoutingMaps} from "../../core/namespaces/RoutingMaps";

export class AdminMessageExecutor extends BaseExecutor {

    public async execute(message: PrivateMessageEvent) : Some {
        if (message.args.length > 0 && RoutingMaps.PRIVATE_COMMANDS.has(message.args[0])) {
            const executor = RoutingMaps.PRIVATE_COMMANDS.get(message.args[0]) as Function;
            const _class = new (executor as { new(): BaseExecutor })()
            return await _class.execute(message);
        }

        const admin : Administrator = new Administrator(message.sender.userId);
        await admin.init();
        await message.reply(`–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\n\nüë§ –ù–∏–∫ - ${admin.nick}\nüß∏ –î–∞—Ç–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è - ${admin.appointment.toString}\n\n–ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –Ω–∞–ø–∏—à–∏ "stats [–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å]", –≥–¥–µ [–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å] - –Ω–∏–∫ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –∏–ª–∏ –µ–≥–æ –í–ö.`)
    }

}